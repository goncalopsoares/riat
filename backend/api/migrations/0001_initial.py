# Generated by Django 5.1.7 on 2025-03-20 00:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_users', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=50)),
                ('user_surname', models.CharField(max_length=100)),
                ('user_email', models.CharField(max_length=100, unique=True)),
                ('user_role', models.IntegerField(default=2)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersBase',
            fields=[
                ('id_answers_base', models.AutoField(primary_key=True, serialize=False)),
                ('answer_creation_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'answers_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimensions',
            fields=[
                ('id_dimensions', models.AutoField(primary_key=True, serialize=False)),
                ('dimension_name', models.CharField(max_length=500)),
                ('dimension_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dimensions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id_projects', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=100, unique=True)),
                ('project_organization', models.CharField(max_length=100, blank=True,  null=True)),
                ('project_phase', models.IntegerField()),
                ('project_trl', models.IntegerField()),
                ('project_mrl', models.IntegerField()),
                ('project_srl', models.IntegerField()),
                ('project_faction', models.CharField(max_length=45)),
                ('project_creation_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statements',
            fields=[
                ('id_statements', models.AutoField(primary_key=True, serialize=False)),
                ('statement_name', models.CharField(max_length=500)),
                ('statement_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scales',
            fields=[
                ('id_scales', models.AutoField(primary_key=True, serialize=False)),
                ('scale_name', models.CharField(max_length=45, unique=True)),
                ('scale_levels', models.IntegerField()),
                ('scale_labels', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'scales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Submissions',
            fields=[
                ('id_submissions', models.AutoField(primary_key=True, serialize=False)),
                ('submission_starting_time', models.DateTimeField()),
                ('submission_ending_time', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'submissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Surveys',
            fields=[
                ('id_surveys', models.AutoField(primary_key=True, serialize=False)),
                ('survey_name', models.CharField(max_length=45, unique=True)),
                ('survey_description', models.TextField()),
            ],
            options={
                'db_table': 'surveys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id_users', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=50)),
                ('user_surname', models.CharField(max_length=100)),
                ('user_email', models.CharField(max_length=100, unique=True)),
                ('user_role', models.IntegerField()),
                ('user_password', models.CharField(max_length=32)),
                ('user_creation_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersHasProjects',
            fields=[
                ('id_users_has_projects', models.AutoField(primary_key=True, serialize=False)),
                ('users_has_projects_role', models.CharField(max_length=45)),
                ('users_has_projectscol_function', models.CharField(max_length=45, blank=True,  null=True)),
            ],
            options={
                'db_table': 'users_has_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersBoolean',
            fields=[
                ('answers_base_id_answers_base', models.OneToOneField(db_column='answers_base_id_answers_base', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.answersbase')),
                ('answer_boolean_value', models.IntegerField()),
            ],
            options={
                'db_table': 'answers_boolean',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersInteger',
            fields=[
                ('answers_base_id_answers_base', models.OneToOneField(db_column='answers_base_id_answers_base', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.answersbase')),
                ('answer_integer_value', models.IntegerField()),
            ],
            options={
                'db_table': 'answers_integer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersSelect',
            fields=[
                ('answers_base_id_answers_base', models.OneToOneField(db_column='answers_base_id_answers_base', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.answersbase')),
                ('answer_select_value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'answers_select',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersText',
            fields=[
                ('answers_base_id_answers_base', models.OneToOneField(db_column='answers_base_id_answers_base', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.answersbase')),
                ('answer_text_value', models.TextField()),
            ],
            options={
                'db_table': 'answers_text',
                'managed': False,
            },
        ),
    ]
